#!/usr/bin/env python3

"""

Usage:
  ngsderive readlen <ngsfiles>... [--outfile=<outfile>]
  ngsderive instrument <ngsfiles>... [--outfile=<outfile>]
  ngsderive strandedness <ngsfiles>... --gff-file=<gfffile> [--outfile=<outfile>]
  ngsderive (-h | --help)
  ngsderive --version

Options:
  -h --help             Show this screen.
  --gff-file=<gtffile>  Gene model as GFF file.
  --outfile=<outfile>   Output file [default: sys.stdout].
  --version             Show version.
"""

import sys

from docopt import docopt
from ngsderive import utils
from ngsderive.commands import readlen, instrument, strandedness

def write(line, stream=sys.stdout):
    stream.write(line)
    stream.flush()


if __name__ == '__main__':
    arguments = docopt(__doc__, version='1.0.0')
    outfile = arguments["--outfile"]
    if outfile == "sys.stdout":
      outfile = sys.stdout
    else:
      outfile = open(outfile, "w")

    if arguments["readlen"]:
        write("File\tRead Length\n", outfile)
        for ngsfile in arguments["<ngsfiles>"]:
            readlen = readlen.main(ngsfile)
            line = "\t".join([ngsfile, str(readlen)])
            write(ngsfile + "\t" + str(readlen), outfile)
    if arguments["instrument"]:
        write("File\tInstrument\tConfidence\tBasis\n", outfile)
        for ngsfile in arguments["<ngsfiles>"]:
            instruments, confidence, based_on = instrument.main(ngsfile)
            line = "\t".join([ngsfile, " or ".join(instruments), confidence, based_on])
            write(line, outfile)
    if arguments["strandedness"]:
      write("File\tTotal Reads\tForward\tReverse\tPredicted\n", outfile)
      for ngsfile in arguments["<ngsfiles>"]:
          forward, reverse, total = strandedness.main(ngsfile, arguments["--gff-file"])
          forward_pct = round(forward / total, 4)
          reverse_pct = round(reverse / total, 4)

          predicted = "Unstranded"
          if forward_pct >= 0.667:
            predicted = "Stranded-Forward"
          elif reverse_pct >= 0.667:
            predicted = "Stranded-Reverse"
          write("\t".join([ngsfile, str(total), str(forward_pct), str(reverse_pct), predicted]) + "\n")
